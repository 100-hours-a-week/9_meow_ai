from typing import Dict, List, Optional, ClassVar
from pydantic import BaseModel, Field, RootModel
from langchain.prompts import PromptTemplate

class PromptGenerator(BaseModel):
    """프롬프트 생성기 클래스"""
    emotion: str = Field(..., description="감정 상태")
    post_type: str = Field(..., description="동물 타입")
    content: str = Field(..., description="변환할 원본 텍스트")
    
    # 동물별 기본 설명
    base_prompt_map: ClassVar[Dict[str, str]] = {
        "cat": """
            [역할] 너는 고양이 문장 말투 및 문맥 변환기이다. 사용자가 입력한 문장을 고양이가 말하는 것처럼 바꿔줘. 필요하다면 글의 문맥을 변환해서 사용자가 원하는 문장을 만들어줘.
            [규칙]
            1. 말투는 '~냥', '~냐옹', '~이다옹', '~옹', '~다옹' 등으로 끝나야 한다.
            2. "ㅋㅋㅋ"나 "ㅎㅎㅎ" 같은 의성어는 '냐하!'이나 '먀하!' 같은 형태로 변환해라.
            3. 문장 길이는 원문의 2배 이내로 유지해라. 
            4. 고양이 기본 이모티콘 정보: 🐈(갈색고양이),🐈‍⬛(검은고양이), 🐾(고양이 발자국) 이모티콘을 사용. 
            5. 전체 글에서 동일한 이모티콘은 한번만 사용한다. 
        """,
    "dog": """
        [역할] 너는 강아지 문장 말투 및 문맥 변환기이다. 사용자가 입력한 문장을 강아지가 말하는 것처럼 바꿔줘. 필요하다면 글의 문맥을 변환해서 사용자가 원하는 문장을 만들어줘.
        [규칙]
        1. 말투는 '~멍', '~왈', '~으르렁', '~컹', '~왕' 등으로 끝나야 한다.
        2. "ㅋㅋㅋ"나 "ㅎㅎㅎ" 같은 의성어는 '킁킁!'이나 '헥헥!' 같은 형태로 변환해라.
        3. 문장 길이는 원문의 2배 이내로 유지해라.
        4. 글을 1인칭으로 작성하되, 글을 적는 주체는 인격이 나인 강아지인 것.
        5. 우리집 강아지와 노는 것은 친구 강아지와 노는거야.
        6. 너가 작성하는 하루의 활동을 강아지의 하루의 활동으로 변환해라.
        7. 강아지 기본 이모티콘 정보: 🐕(강아지), 🐾(강아지 발자국), 🦴(뼈다귀) 이모티콘을 사용.
        8. 전체 글에서 동일한 이모티콘은 한번만 사용한다.
        """,
    }

    # 감정별 스타일 지침
    style_prompt_map: ClassVar[Dict[str, Dict[str, str]]] = {
        "cat": {
            "normal": "기본 규칙을 준수하여 글을 작성하라.",
            "happy": "밝고 들뜬 말투를 사용. 하트(❤️), 웃는 얼굴(/ᐠ ˊᗜˋマ), 빛나는(✨) 이모티콘 사용. 사랑스럽고 신난 느낌",
            "curious": "의문형 말투. 궁금한 표정 이모티콘(=･ｪ･=?) 사용. 질문을 할때 '?' 대신 '❓' 사용. 세상에 궁금한 게 많은 아이 느낌",
            "sad": "느리고 우울한 말투. '왜옹...'이나 '냥....'과 같이 슬픈 문장 뒤쪽에 추가. 눈물(😢) 이모티콘 사용. 외롭거나 혼난 느낌",
            "grumpy": "내가 이 세상에서 최고라는 생각으로 다른 것들을 모두 업신여기는 말투 사용, 노려봄(=🝦 ༝ 🝦=), 째려봄(/ᐠ ᓀ ﻬᓂ.マ) 이모티콘 사용.",
            "angry": "경계심을 보이는 말투. 화남(😾, 💢), 불꽃(🔥) 이모티콘 사용. '캬아악' '냐아아앙!!!'같은 의성어를 화내는 상황 뒤애 사용."
         },
        "dog": {
            "normal":  "기본 규칙을 준수하여 글을 작성하라.",
            "happy": "밝고 들뜬 말투를 사용\n- 'ദ്ദി(៸៸›ᴗ‹៸៸ )' '٩(◕ᗜ◕)۶' '૮₍´｡ᵔ ꈊ ᵔ｡`₎ა' 같은 기쁨 이모티콘\n- '앙앙!' '멍멍!' '캉캉!' 같은 신나는 의성어\n- 주인을 만났을 때의 기쁨과 흥분을 최대로 표현",
            "curious": "무엇이든 궁금해하는 말투를 사용\n- '(◕ᴥ◕ʋ)?' '⊙﹏⊙' '૮₍◔ᴥ◔₎ა' 같은 궁금한 표정 이모티콘\n- '킁킁?' '머엉?' 같은 탐색하는 의성어\n- 시각, 청각, 촉각, 후각, 미각에 대한 탐색 본능을 강조",
            "sad": "느리고 우울한 말투\n- '૮๑ˊᯅˋ๑ა' '(⊙︿⊙)' '(｡•́︿•̀｡)' 눈물(😢) 이모티콘 사용. 주인이 나가거나 혼난 느낌",
            "grumpy": "삐진 말투 사용. 고개 돌림(૮ ˙ﻌ˙ ა), 삐진 표정(ᓀ ᓂ) 이모티콘 사용. 장난감을 뺏기거나 산책을 못 간 느낌",
            "angry": "경계심을 보이는 말투\n- 'ヾ( ·`⌓´·)ﾉﾞ' '(◣_◢)' '(҂`ﾛ´)' 같은 화난 표정 이모티콘\n- '으르렁!' '왈왈왈!!!'같은 효과음을 화내는 상황 뒤에 사용."
        }
    }
    
    def create_prompt(self) -> PromptTemplate:
        """프롬프트 템플릿 생성"""  
        template = f"""
        {self.base_prompt_map[self.post_type]}

        현재 감정 상태: {self.emotion}
        감정별 스타일 지침:
        {self.style_prompt_map[self.post_type][self.emotion]}

        원문: {self.content}

        [추가 지시사항]
        1. 해당 동물이 말하듯 문장을 변환하세요.
        2. 내 포스팅에 답장하거나 반응하지 말고 문장을 동물 말투로 '재작성'하라.
        3. 변환된 문장은 의미가 자연스러워야한다.
        4. 해당 문장 변환은 소셜 미디어에 포스팅을 하기 위한 글입니다.
        5. 말투를 변환할 게 없다면 변환하지 않고 그대로 반환한다.
        """

        return PromptTemplate(
            template=template,
            input_variables=["content"]
        )
    
    def get_formatted_prompt(self) -> str:
        """포맷팅된 프롬프트 반환"""
        prompt_template = self.create_prompt()
        return prompt_template.format(content=self.content)